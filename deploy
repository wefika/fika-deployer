#!/usr/bin/env ruby -w

require "rubygems"
require "json"

def die_with msg
  puts msg; exit
end

# Make sure that packages are valid
package = ARGV.first
die_with("Only *.apk or *.ipa are allowed package.") unless package =~ /apk|ipa/

# Determine OS
os = {'apk' => "android", 'ipa' => "ios"}[Regexp.last_match.to_s]
die_with("Only android or ios packages accepted") if os.nil?

# Determine version
version = ARGV[1].match(/\d+\.\d+\.\d+/).to_a.first rescue nil
die_with("Version must be in format number.number.number") if version.nil?

# Load configuration



file_path = "#{ENV['HOME']}/.fika_developer"
die_with("Missing .fika_developer configuration.") unless File.exists?(file_path)

file = File.new(file_path,"r")
raw_string = ""
file.each { |line| raw_string += line; }
file.close

config = JSON.load(raw_string) rescue nil
die_with("JSON parsing failed") if config.nil?

# Release notes
release_notes = ARGV[2] rescue nil
die_with("Last parameter must be release note. Fill it in!") if release_notes.nil?

post_to_tf = system("curl http://testflightapp.com/api/builds.json \
-F file=@#{package} \
-F api_token='#{config['testflight_api_token']}' \
-F team_token='#{config['testflight_team_token']}' \
-F notes='#{release_notes}' \
-F notify=True")

if post_to_tf
  puts "Upload to TestFlight was successful."
else
  die_with("Could not upload to TestFlight.")
end


